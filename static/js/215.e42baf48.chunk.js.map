{"version":3,"file":"static/js/215.e42baf48.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBN,EAASO,IAAI,oBAD/B,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBX,EAASO,IAAT,6BAAmCI,IADrD,cACCH,EADD,yBAEEA,EAASC,MAFX,kEAIA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBb,EAASO,IAAT,gBAAsBM,IADxC,cACCL,EADD,yBAEEA,EAASC,MAFX,kEAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACkBb,EAASO,IAAT,gBAAsBM,EAAtB,aADlB,cACCL,EADD,yBAEEA,EAASC,MAFX,kEAIA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACkBb,EAASO,IAAT,gBAAsBM,EAAtB,aADlB,cACCL,EADD,yBAEEA,EAASC,MAFX,kE,sICxBQ,SAASO,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,GAAgB,KAAZJ,EAAgB,CAAC,IACJK,EADG,mCAClB,qGACqBP,EAAAA,EAAAA,IAAgBE,GADrC,OACQR,EADR,OAEEW,EAAWX,GAFb,2CADkB,qDAKlBa,GACD,CACF,GAAE,CAACL,KAGF,yBACGE,GAAWA,EAAQI,cAAgB,GAClC,wBACGJ,EAAQK,QAAQC,KAAI,SAAAC,GAAM,OACzB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADS,MAF9B,6CAcN,C","sources":["api/api.js","components/Movies/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYjA1ODRjY2MyNGUzOGUwODY2MjhiZDYxMGQyYjUwOSIsInN1YiI6IjY0NzUwZTMyMWJmMjY2MDQzZDJmYTNkYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8iMn_9jzMLQ6tsrySBCRE-qg_BgMVvp1Gubh2TkRYtk',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const response = await instance.get('trending/all/day');\n  return response.data;\n}\nexport async function searchMovies(querry) {\n  const response = await instance.get(`search/movie?query=${querry}`);\n  return response.data;\n}\nexport async function getMovieData(movieid) {\n  const response = await instance.get(`movie/${movieid}`);\n  return response.data;\n}\nexport async function getMovieCredits(movieid) {\n  const response = await instance.get(`movie/${movieid}/credits`);\n  return response.data;\n}\nexport async function getMovieReviews(movieid) {\n  const response = await instance.get(`movie/${movieid}/reviews`);\n  return response.data;\n}\n","import { getMovieReviews } from 'api/api';\nimport { useEffect, useState } from 'react';\n\nexport default function Reviews({ movieId }) {\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    if (movieId !== '') {\n      async function fetchReviews() {\n        const data = await getMovieReviews(movieId);\n        setReviews(data);\n      }\n      fetchReviews();\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews && reviews.total_results > 0 ? (\n        <ul>\n          {reviews.results.map(review => (\n            <li key={review.id}>\n              <b>Author: {review.author}</b>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        `We don't have any reviews for this movie.`\n      )}\n    </div>\n  );\n}\n"],"names":["instance","axios","baseURL","headers","accept","Authorization","getTrendingMovies","get","response","data","searchMovies","querry","getMovieData","movieid","getMovieCredits","getMovieReviews","Reviews","movieId","useState","reviews","setReviews","useEffect","fetchReviews","total_results","results","map","review","author","content","id"],"sourceRoot":""}