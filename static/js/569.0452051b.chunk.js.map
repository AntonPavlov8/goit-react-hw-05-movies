{"version":3,"file":"static/js/569.0452051b.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBN,EAASO,IAAI,oBAD/B,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBX,EAASO,IAAT,6BAAmCI,IADrD,cACCH,EADD,yBAEEA,EAASC,MAFX,kEAIA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBb,EAASO,IAAT,gBAAsBM,IADxC,cACCL,EADD,yBAEEA,EAASC,MAFX,kEAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACkBb,EAASO,IAAT,gBAAsBM,EAAtB,aADlB,cACCL,EADD,yBAEEA,EAASC,MAFX,kEAIA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACkBb,EAASO,IAAT,gBAAsBM,EAAtB,aADlB,cACCL,EADD,yBAEEA,EAASC,MAFX,kE,uJCtBQ,SAASO,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAcL,EAAaX,IAAI,UAErCiB,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBd,EAAAA,EAAAA,IAAaa,GADlC,OACQd,EADR,OAEEa,EAAiBb,EAAKgB,SAFxB,4CADc,sBAKVF,GALW,WAAD,wBAMZG,EAEH,GAAE,CAACR,EAAcK,IAQlB,OACE,4BACE,kBAAMI,SARO,SAAAC,GACfA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAAS,GAAGF,MACnCX,EAAgB,CAAEc,MAAOH,GAC1B,EAIG,WACE,kBAAOI,KAAK,UACZ,mBAAQA,KAAK,SAAb,wBAEF,0BACE,wBACGb,EAAcc,KAAI,SAAAC,GAAK,OACtB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,QAASjB,GAAnD,SACGa,EAAMK,SAFFL,EAAME,GADO,UAWjC,CCzCc,SAASI,EAAT,GAAmC,IAAjBC,EAAgB,EAAhBA,aACzB9B,GAAY+B,EAAAA,EAAAA,MAAZ/B,QAeN,OAbAW,EAAAA,EAAAA,YAAU,WACR,GAAIX,EAAS,CAAC,IACGgC,EADJ,mCACX,qGACqBjC,EAAAA,EAAAA,IAAaC,GADlC,OACQJ,EADR,OAEEkC,EAAa,CACXL,GAAIzB,EACJiC,KAAMrC,IAJV,2CADW,qDAQXoC,GACD,CACF,GAAE,CAAChC,EAAS8B,KAEN,yBAAM9B,GAAU,SAAC,KAAD,KAAa,SAACG,EAAD,KACrC,C","sources":["api/api.js","components/Movies/Search.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYjA1ODRjY2MyNGUzOGUwODY2MjhiZDYxMGQyYjUwOSIsInN1YiI6IjY0NzUwZTMyMWJmMjY2MDQzZDJmYTNkYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8iMn_9jzMLQ6tsrySBCRE-qg_BgMVvp1Gubh2TkRYtk',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const response = await instance.get('trending/all/day');\n  return response.data;\n}\nexport async function searchMovies(querry) {\n  const response = await instance.get(`search/movie?query=${querry}`);\n  return response.data;\n}\nexport async function getMovieData(movieid) {\n  const response = await instance.get(`movie/${movieid}`);\n  return response.data;\n}\nexport async function getMovieCredits(movieid) {\n  const response = await instance.get(`movie/${movieid}/credits`);\n  return response.data;\n}\nexport async function getMovieReviews(movieid) {\n  const response = await instance.get(`movie/${movieid}/reviews`);\n  return response.data;\n}\n","import { searchMovies } from 'api/api';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\n\nexport default function Search() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchResults, setSearchResults] = useState([]);\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await searchMovies(searchQuery);\n      setSearchResults(data.results);\n    }\n    if (searchQuery) {\n      fetchData();\n    }\n  }, [searchParams, searchQuery]);\n\n  const searchFn = e => {\n    e.preventDefault();\n    const value = e.target.elements[0].value;\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <div>\n      <form onSubmit={searchFn}>\n        <input type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <div>\n        <ul>\n          {searchResults.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ prevUrl: searchQuery }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import { getMovieData } from 'api/api';\nimport { useEffect } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport Search from './Search';\n\nexport default function Movies({ setMovieData }) {\n  let { movieid } = useParams();\n\n  useEffect(() => {\n    if (movieid) {\n      async function setMovie() {\n        const data = await getMovieData(movieid);\n        setMovieData({\n          id: movieid,\n          info: data,\n        });\n      }\n      setMovie();\n    }\n  }, [movieid, setMovieData]);\n\n  return <div>{movieid ? <Outlet /> : <Search />}</div>;\n}\n"],"names":["instance","axios","baseURL","headers","accept","Authorization","getTrendingMovies","get","response","data","searchMovies","querry","getMovieData","movieid","getMovieCredits","getMovieReviews","Search","useSearchParams","searchParams","setSearchParams","useState","searchResults","setSearchResults","searchQuery","useEffect","results","fetchData","onSubmit","e","preventDefault","value","target","elements","query","type","map","movie","to","id","state","prevUrl","title","Movies","setMovieData","useParams","setMovie","info"],"sourceRoot":""}